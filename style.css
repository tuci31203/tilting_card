/* CSS RESET */
*, *::before, *::after {
    box-sizing: border-box;
  }

* {
    padding: 0;
    margin: 0;
    /* font-family: Inter; */
}

::selection{
    background-color: pink;
}
/* 
body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
}

img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
}

input, button, textarea, select {
    font: inherit;
}

p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
}

#root, #__next {
    isolation: isolate;
} */
/* CSS RESET */

:root{
    --pink: rgb(218, 47, 75);
    --teal: rgb(115, 248, 248);
    --white: rgb(236, 236, 236);
}


body{
    background-color: rgb(44, 44, 53);
    background-image: conic-gradient(
        from 0deg at 50% 50%,
        blue,
        rgb(9, 0, 128),
        rgb(56, 25, 82),
        blue
    );
    background-blend-mode: multiply;
    color: white;
    min-block-size: 100dvh;
    display: grid;
    place-items: center;
}

pre{
    --selector:var(--pink);
    --property:var(--teal);
    --punctuation:var(--white);
    /* --undefined: var(--white); */
    

    font-size: 3rem;
    font-weight: bold;
    /* color: var(--undefined); */
    background-color: rgb(21, 18, 36);
    padding: 2rem;
    border-radius: 1rem;

    position: relative;

    transform-style: preserve-3d;
    transform: 
        perspective(5000px)
        rotateY(var(--rotY))
        rotateX(var(--rotX))
        ;
    
}

pre > *{
    text-shadow: 0 0 0.3em currentColor;
}

pre::before,
pre::after{
    content: "";
    position: absolute;
    border-radius: inherit;
}

pre::before{
    z-index: -1;
    inset: 0.75rem;
    border: inherit;
    background: rgb(0, 0, 0);
    transform: translateZ(-49px);
    filter: blur(15px);
    opacity: 0.5;
}

pre::after{
    z-index: -2;
    inset: -1rem;
    background:
        linear-gradient(-45deg, red, blue);
    transform: translateZ(-50px);
}



.selector{
    color: var(--selector);
}

.property{
    color: var(--property);
}

.punctuation{
    color: var(--punctuation);
}

.property + .punctuation{
    color: var(--property);
}

